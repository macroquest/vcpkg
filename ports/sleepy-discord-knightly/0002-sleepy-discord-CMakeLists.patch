diff --git a/sleepy_discord/CMakeLists.txt b/sleepy_discord/CMakeLists.txt
index 386ea5a8..1c358044 100644
--- a/sleepy_discord/CMakeLists.txt
+++ b/sleepy_discord/CMakeLists.txt
@@ -53,10 +53,14 @@ if (NOT ONLY_SLEEPY_DISCORD)
 	#for some reason you a limited ammount of target_link_libraries calls
 	set(LIBRARIES_TO_LINK)
 	if(USE_CPR)
-		if(CURL_STATICLIB)
-			target_compile_definitions(${CPR_LIBRARIES} PUBLIC CURL_STATICLIB)
+		if(USE_VCPKG_LIBS)
+			find_package(cpr REQUIRED)
+		else()
+			if(CURL_STATICLIB)
+				target_compile_definitions(${CPR_LIBRARIES} PUBLIC CURL_STATICLIB)
+			endif()
+			target_include_directories(sleepy-discord PUBLIC ${CPR_INCLUDE_DIRS})
 		endif()
-		target_include_directories(sleepy-discord PUBLIC ${CPR_INCLUDE_DIRS})
 		list(APPEND LIBRARIES_TO_LINK "${CPR_LIBRARIES}")
 		target_compile_definitions(sleepy-discord PUBLIC EXISTENT_CPR)
 	else()
@@ -64,7 +68,12 @@ if (NOT ONLY_SLEEPY_DISCORD)
 	endif()
 
 	if(USE_ASIO)
-		target_include_directories(sleepy-discord PUBLIC ${asio_SOURCE_DIR}/asio/include)
+		if(USE_VCPKG_LIBS)
+			find_package(asio CONFIG REQUIRED)
+			list(APPEND LIBRARIES_TO_LINK "asio::asio")
+		else()
+			target_include_directories(sleepy-discord PUBLIC ${asio_SOURCE_DIR}/asio/include)
+		endif()
 		target_compile_definitions(sleepy-discord PUBLIC EXISTENT_ASIO)
 	elseif(USE_BOOST_ASIO)
 		target_compile_definitions(sleepy-discord PUBLIC NONEXISTENT_ASIO)
@@ -79,7 +88,11 @@ if (NOT ONLY_SLEEPY_DISCORD)
 	endif()
 
 	if(USE_WEBSOCKETPP)
-		target_include_directories(sleepy-discord PUBLIC ${websocketpp_SOURCE_DIR})
+		if(USE_VCPKG_LIBS)
+			find_package(websocketpp REQUIRED)
+		else()
+			target_include_directories(sleepy-discord PUBLIC ${websocketpp_SOURCE_DIR})
+		endif()
 		if (WIN32)
 			find_package(OpenSSL REQUIRED)
 			list(APPEND LIBRARIES_TO_LINK "OpenSSL::SSL" "OpenSSL::Crypto")
@@ -92,10 +105,14 @@ if (NOT ONLY_SLEEPY_DISCORD)
 	endif()
 
 	if(USE_UWEBSOCKETS)
-		find_library(LIB_UWS uWS
-			PATHS ${uwebsockets_SOURCE_DIR}/lib
-		)
-		target_include_directories(sleepy-discord PUBLIC ${uwebsockets_SOURCE_DIR}/include)
+		if(USE_VCPKG_LIBS)
+			find_package(uwebsockets REQUIRED)
+		else()
+			find_library(LIB_UWS uWS
+				PATHS ${uwebsockets_SOURCE_DIR}/lib
+			)
+			target_include_directories(sleepy-discord PUBLIC ${uwebsockets_SOURCE_DIR}/include)
+		endif()
 		list(APPEND LIBRARIES_TO_LINK "${LIB_UWS}")
 		target_compile_definitions(sleepy-discord PUBLIC EXISTENT_UWEBSOCKETS)
 	else()
@@ -103,7 +120,11 @@ if (NOT ONLY_SLEEPY_DISCORD)
 	endif()
 
 	if(USE_LIBOPUS)
-		target_include_directories(sleepy-discord PUBLIC ${opus_SOURCE_DIR}/include)
+		if(USE_VCPKG_LIBS)
+			find_package(opus REQUIRED)
+		else()
+			target_include_directories(sleepy-discord PUBLIC ${opus_SOURCE_DIR}/include)
+		endif()
 		list(APPEND LIBRARIES_TO_LINK "opus")
 		target_compile_definitions(sleepy-discord PUBLIC EXISTENT_OPUS)
 	else()
@@ -111,25 +132,30 @@ if (NOT ONLY_SLEEPY_DISCORD)
 	endif()
 
 	if(USE_LIBSODIUM)
-		if (WIN32)
-			find_package(unofficial-sodium CONFIG REQUIRED)
-			list(APPEND LIBRARIES_TO_LINK "unofficial-sodium::sodium")
-			find_path(SODIUM_INCLUDE_DIR NAMES sodium.h)
-			target_include_directories(sleepy-discord PUBLIC ${SODIUM_INCLUDE_DIR})
+		if(USE_VCPKG_LIBS)
+			find_package(libsodium CONFIG REQUIRED)
+			list(APPEND LIBRARIES_TO_LINK "libsodium::sodium")
 		else()
-			add_dependencies(sleepy-discord libsodium-make)
-			ExternalProject_Get_property(libsodium-make BINARY_DIR)
-			set(libsodium-make_BINARY_DIR ${BINARY_DIR})
-			set(
-				LIB_SODIUM_BUILDS 
-				${libsodium-make_BINARY_DIR}/src/libsodium/.libs/${CMAKE_STATIC_LIBRARY_PREFIX}sodium${CMAKE_STATIC_LIBRARY_SUFFIX}
-			)
-			target_include_directories(
-				sleepy-discord PUBLIC
-				${libsodium_SOURCE_DIR}/src/libsodium/include
-				${libsodium-make_BINARY_DIR}/src/libsodium/include
-			)
-			list(APPEND LIBRARIES_TO_LINK "${LIB_SODIUM_BUILDS}")
+			if (WIN32)
+				find_package(unofficial-sodium CONFIG REQUIRED)
+				list(APPEND LIBRARIES_TO_LINK "unofficial-sodium::sodium")
+				find_path(SODIUM_INCLUDE_DIR NAMES sodium.h)
+				target_include_directories(sleepy-discord PUBLIC ${SODIUM_INCLUDE_DIR})
+			else()
+				add_dependencies(sleepy-discord libsodium-make)
+				ExternalProject_Get_property(libsodium-make BINARY_DIR)
+				set(libsodium-make_BINARY_DIR ${BINARY_DIR})
+				set(
+					LIB_SODIUM_BUILDS 
+					${libsodium-make_BINARY_DIR}/src/libsodium/.libs/${CMAKE_STATIC_LIBRARY_PREFIX}sodium${CMAKE_STATIC_LIBRARY_SUFFIX}
+				)
+				target_include_directories(
+					sleepy-discord PUBLIC
+					${libsodium_SOURCE_DIR}/src/libsodium/include
+					${libsodium-make_BINARY_DIR}/src/libsodium/include
+				)
+				list(APPEND LIBRARIES_TO_LINK "${LIB_SODIUM_BUILDS}")
+			endif()
 		endif()
 		target_compile_definitions(sleepy-discord PUBLIC EXISTENT_SODIUM)
 	else()
@@ -156,10 +182,16 @@ else()
 		NONEXISTENT_SODIUM)
 endif()
 
-if(NOT Git_FOUND)
-	target_compile_definitions(sleepy-discord PRIVATE NONEXISTANT_GIT_INFO)
+if(DEFINED NO_VERSION_INFO)
+	target_compile_definitions(sleepy-discord PUBLIC NONEXISTANT_VERSION_H)
 endif()
 
 if(ENABLE_VOICE)
 	target_compile_definitions(sleepy-discord PUBLIC SLEEPY_VOICE_ENABLED)
+endif()
+
+if(USE_VCPKG_LIBS)
+	install(TARGETS sleepy-discord LIBRARY)
+	install(DIRECTORY ../include/sleepy_discord TYPE INCLUDE
+	        CONFIGURATIONS Release)
 endif()
\ No newline at end of file
