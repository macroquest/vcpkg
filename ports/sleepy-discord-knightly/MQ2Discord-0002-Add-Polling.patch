---
 include/sleepy_discord/client.h                | 1 +
 include/sleepy_discord/websocketpp_websocket.h | 1 +
 sleepy_discord/default_functions.cpp           | 4 ++++
 sleepy_discord/websocketpp_websocket.cpp       | 4 ++++
 4 files changed, 10 insertions(+)

diff --git a/include/sleepy_discord/client.h b/include/sleepy_discord/client.h
index c8c8e9d..08e9535 100644
--- a/include/sleepy_discord/client.h
+++ b/include/sleepy_discord/client.h
@@ -355,6 +355,7 @@ namespace SleepyDiscord {
 		void setIntents(IntentsRaw newIntents) { intentsIsSet = true; intents = static_cast<Intent>(newIntents); }
 		void quit() { quit(false); }	//public function for diconnecting
 		virtual void run();
+		virtual void poll();
 
 		//array of intents
 		template<class Container, typename T = typename Container::value_type>
diff --git a/include/sleepy_discord/websocketpp_websocket.h b/include/sleepy_discord/websocketpp_websocket.h
index caca5a8..4dbd6c8 100644
--- a/include/sleepy_discord/websocketpp_websocket.h
+++ b/include/sleepy_discord/websocketpp_websocket.h
@@ -37,6 +37,7 @@ namespace SleepyDiscord {
 		using TimerPointer = std::weak_ptr<websocketpp::lib::asio::steady_timer>;
 
 		void run() override;
+		void poll() override;
 		Timer schedule(TimedTask code, const time_t milliseconds) override;
 		void postTask(PostableTask code) override {
 			asio::post(code);
diff --git a/sleepy_discord/default_functions.cpp b/sleepy_discord/default_functions.cpp
index 90a4028..83196ab 100644
--- a/sleepy_discord/default_functions.cpp
+++ b/sleepy_discord/default_functions.cpp
@@ -179,6 +179,10 @@ namespace SleepyDiscord {
 
 	}
 
+	void BaseDiscordClient::poll() {
+
+	}
+
 	void BaseDiscordClient::onQuit() {
 
 	}
diff --git a/sleepy_discord/websocketpp_websocket.cpp b/sleepy_discord/websocketpp_websocket.cpp
index 8f24d48..af2d516 100644
--- a/sleepy_discord/websocketpp_websocket.cpp
+++ b/sleepy_discord/websocketpp_websocket.cpp
@@ -98,6 +98,10 @@ namespace SleepyDiscord {
 		this_client.run();
 	}
 
+	void WebsocketppDiscordClient::poll() {
+		this_client.poll();
+	}
+
 	void handleTimers(const websocketpp::lib::error_code &ec, std::function<void()>& code, _client::timer_ptr timer) {
 		if (ec != websocketpp::transport::error::operation_aborted) {
 			code();
-- 
2.19.2.windows.1

